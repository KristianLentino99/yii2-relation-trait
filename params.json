{"name":"Yii2-relation-trait","tagline":"Yii 2 Models add functionality for load with relation, & transactional save with relation","body":"# yii2-relation-trait\r\nYii 2 Models add functionality for load with relation (loadAll($POST)), &amp; transactional save with relation (saveAll())\r\n\r\n## Installation\r\n\r\nThe preferred way to install this extension is through [composer](http://getcomposer.org/download/).\r\n\r\nEither run\r\n\r\n```bash\r\n$ composer require mootensai/yii2-relation-trait\r\n```\r\n\r\nor add\r\n\r\n```\r\n\"mootensai/yii2-relation-trait\": \"*\"\r\n```\r\n\r\nto the `require` section of your `composer.json` file.\r\n\r\n\r\n## Usage At Model\r\n```php\r\nclass MyModel extends ActiveRecord{\r\n    use \\mootensai\\relation\\RelationTrait;\r\n}\r\n```\r\n\r\n## Array Input & Usage At Controller\r\nIt takes a normal array of POST. This is the example\r\n\r\n```php\r\n// sample at controller\r\n//$_POST['ParentClass'] = ['attr1' => 'value1','attr2' => 'value2'];\r\n//$_POST['RelatedClass'][0] = ['attr1' => 'value1','attr2' => 'value2'];      \r\nif($model->loadAll(Yii:$app->request->post()) && $model->saveAll()){\r\n    return $this->redirect(['view', 'id' => $model->id, 'created' => $model->created]);\r\n}\r\n```\r\n\r\n#Features\r\n\r\n## Array Output  \r\n```php\r\n// I use this to send model & related through JSON / Serialize\r\nprint_r($model->getAttributesWithRelatedAsPost());\r\n```\r\n\r\n```\r\nArray\r\n(\r\n    [MainClass] => Array\r\n        (\r\n            [attr1] => value1\r\n            [attr2] => value2\r\n        )\r\n\r\n    [RelatedClass] => Array\r\n        (\r\n            [0] => Array\r\n                (\r\n                    [attr1] => value1\r\n                    [attr2] => value2\r\n                )\r\n        )\r\n\r\n)\r\n```\r\n\r\n```php\r\nprint_r($model->getAttributesWithRelated());\r\n```\r\n\r\n```\r\nArray\r\n(\r\n    [attr1] => value1\r\n    [attr2] => value2\r\n    [relationName] => Array\r\n        (\r\n            [0] => Array\r\n                (\r\n                    [attr1] => value1\r\n                    [attr2] => value2\r\n                )\r\n        )\r\n)\r\n```\r\n\r\n## Using Transaction\r\nYour data will be atomic\r\n(see : http://en.wikipedia.org/wiki/ACID)\r\n\r\n## Use Normal Save\r\nso your behavior still works\r\n\r\n## Add Validation At Main Model\r\n```php\r\n$form->errorSummary($model);\r\n```\r\nwill give you\r\n```\r\n<<Related Class Name>> #<<index + 1>> : <<error message>>\r\nMy Related Model #1 : Attribute is required\r\n```\r\n## It Works On Auto Incremental PK Or Not (I Have Tried Use UUID)\r\n\r\n#To Do\r\nTest it on another DB. I only test it on MySQL.\r\n\r\nI'm open for any improvement\r\n","google":"UA-63946042-1","note":"Don't delete this file! It's used internally to help with page regeneration."}